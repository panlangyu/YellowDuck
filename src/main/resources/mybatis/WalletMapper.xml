<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duck.yellowduck.domain.dao.WalletMapper">

    <!-- 封装给客户端的Vo数据 -->
    <resultMap id="BaseResultMap" type="com.duck.yellowduck.domain.model.vo.CoinVoInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <!--<result column="coinId" jdbcType="INTEGER" property="coinId"/>-->
        <result column="coinName" jdbcType="VARCHAR" property="coinName"/>
        <result column="coinImg" jdbcType="VARCHAR" property="coinImg"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <!--<result column="contractAddr" jdbcType="VARCHAR" property="contractAddr"/>-->
        <result column="userId" jdbcType="INTEGER" property="userId"/>
    </resultMap>

    <!-- 封装条件 -->
    <resultMap id="BaseResultMapWallet" type="com.duck.yellowduck.domain.model.model.Wallet">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <!--<result column="coinId" jdbcType="INTEGER" property="coinId"/>-->
        <result column="coinName" jdbcType="VARCHAR" property="coinName"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="contractAddr" jdbcType="VARCHAR" property="contractAddr"/>
        <result column="privateKey" jdbcType="VARCHAR" property="privateKey"/>
        <result column="passwd" jdbcType="VARCHAR" property="passwd"/>
        <result column="keystore" jdbcType="VARCHAR" property="keystore"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="userId" jdbcType="INTEGER" property="userId"/>
    </resultMap>

    <!-- 封装币种信息 -->
    <resultMap id="BaseResultWallet" type="com.duck.yellowduck.domain.model.vo.WalletStatusVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="coinName" jdbcType="VARCHAR" property="coinName"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="contractAddr" jdbcType="VARCHAR" property="contractAddr"/>
    </resultMap>


    <!-- 查询用户钱包下的币种信息 -->
    <select id="selectUserWalletInfo" resultMap="BaseResultMap">


        SELECT

        <include refid="Base_Column_ETHInfo"/>

        FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>

        </trim>

        UNION ALL

        SELECT

        <include refid="Base_Column_HeYueInfo"/>

        FROM duck_coin AS c
        LEFT JOIN duck_contract_relation AS r  ON c.id = r.coinId
        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>

        </trim>

       /* WHERE userId = 9
        AND c.id = 2*/


        <!--SELECT

        <include refid="Base_Column_ETHWallet"/>

        FROM duck_wallet AS w
        INNER JOIN duck_coin AS c ON w.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>
          &lt;!&ndash;  <if test="coinName != null and coinName.length() > 0">
                AND c.coinName = #{coinName}
            </if>&ndash;&gt;

        </trim>

        UNION ALL

        SELECT

        <include refid="Base_Column_ContractWallet"/>

        FROM duck_contract_relation AS r
        INNER JOIN duck_coin AS c ON r.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>
           &lt;!&ndash; <if test="coinName != null and coinName.length() > 0">
                AND c.coinName = #{coinName}
            </if>&ndash;&gt;

        </trim>-->

    </select>

    <!-- 查询币种详情单条ETH信息 -->
    <select id="selectETHCoinInfoById" resultMap="BaseResultMap">



        <!--<include refid="Base_Column_ETHWallet"/>-->

        SELECT

        <include refid="Base_Column_ETHInfo"/>

        FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>
            <if test="coinName != null and coinName.length() > 0">
                AND coinName = #{coinName}
            </if>
            <if test="id != null and id != 0">
                AND id = #{id}
            </if>

        </trim>

    </select>

    <!-- 查询币种详情单条合约币信息 -->
    <select id="selectContractCoinInfoById" resultMap="BaseResultMap">

        SELECT

        <include refid="Base_Column_HeYueInfo"/>

        FROM duck_coin AS c
        LEFT JOIN duck_contract_relation AS r  ON c.id = r.coinId
        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userid = #{userId}
            </if>
            <if test="coinName != null and coinName.length() > 0">
                AND c.coinName = #{coinName}
            </if>
            <if test="id != null and id != 0">
                AND c.id = #{id}
            </if>

        </trim>

        <!--SELECT

        <include refid="Base_Column_ContractWallet"/>

        FROM duck_contract_relation AS r
        INNER JOIN duck_coin AS c ON r.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>
           &lt;!&ndash; <if test="coinName != null and coinName.length() > 0">
                AND c.coinName = #{coinName}
            </if>&ndash;&gt;
            <if test="coinId != null and coinId != 0">
                AND w.coidId = #{coinId}
            </if>

        </trim>-->

    </select>



    <!-- 锁住钱包表,行级锁 -->
    <select id="lockWalletTable" resultType="com.duck.yellowduck.domain.model.model.Wallet" parameterType="java.lang.Integer">

        /*SELECT * FROM duck_wallet FOR UPDATE*/

        SELECT * FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id != null and id != 0">
                AND id = #{id}
            </if>

        </trim>

        LOCK IN SHARE MODE;

    </select>



    <!-- 查询用户拥有单条钱包信息,ETH -->
    <select id="selectUserWalletETHAddress" resultType="com.duck.yellowduck.domain.model.model.Wallet">

        SELECT

        <include refid="Base_Column_ListWallet"/>

        FROM duck_wallet AS w
        INNER JOIN duck_coin AS c ON w.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

            <if test="id != null and id != 0">
                AND w.id = #{id}
            </if>

        </trim>

    </select>


    <!-- 查询合约币信息 -->
    <select id="selectUserWalletContractAddrInfo" resultType="com.duck.yellowduck.domain.model.model.Wallet">

        SELECT

        <include refid="Base_Column_ListContract"/>

        FROM duck_contract_relation AS r
        INNER JOIN duck_coin AS c ON r.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

            <if test="id != null and id != 0">
                AND r.id = #{id}
            </if>

        </trim>
    </select>


    <select id="selectUserWalletInterest" resultType="com.duck.yellowduck.domain.model.model.Wallet">
        SELECT w.id,coinId,coinName,w.address,w.create_time,w.update_time,userId,freeAmount,amount,availableAmount FROM duck_wallet w
        INNER JOIN DUCK_COIN c ON w.`coinId`=c.`id`
        WHERE freeAmount != 0
        AND TO_DAYS( NOW() ) - TO_DAYS(w.update_time) &lt;= 3
    </select>


    <update id="modifyUserWalletInterest" parameterType="com.duck.yellowduck.domain.model.model.Wallet">
        UPDATE duck_wallet

        <trim prefix="SET" suffixOverrides="," suffix="WHERE id=#{id}">

            <if test="amount != null and amount != 0">
                freeAmount = freeAmount + #{amount},
                amount = amount + #{amount},
                interest = interest + #{amount},
            </if>
            update_time = NOW(),
        </trim>

    </update>

    <!-- 新增ETH钱包信息 -->
    <insert id="insertWalletInfo" parameterType="com.duck.yellowduck.domain.model.model.Wallet">

        INSERT INTO duck_wallet(
                coinName,
                coinImg,
                address,
                contractAddr,
                privateKey,
                passwd,
                create_time,
                update_time,
                keystore,
                userId
                )
        VALUES(
            #{coinName},
            #{coinImg},
            #{address},
            #{contractAddr},
            #{privateKey},
            #{passwd},
            NOW(),
            NOW(),
            #{keystore},
            #{userId}
        )

    </insert>


    <!-- 查询用户ETH是否添加 -->
    <select id="findWalletAddressByUserId" resultType="java.lang.String">

        SELECT address FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

            <if test="coinName != null and coinName.length() > 0">
                AND coinName = #{coinName}
            </if>

        </trim>

    </select>

    <!-- 查询合约币是否存在 -->
    <select id="findWalletByUserIdAndAddress" resultMap="BaseResultMapWallet">

        SELECT

        <include refid="Base_Column_List"/>

        FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

            <if test="contractAddr != null and contractAddr.length() > 0">
                AND contractAddr = #{contractAddr}
            </if>

        </trim>

    </select>


    <!-- 查询用户币种信息 -->
    <select id="findUserWalletInfo" resultMap="BaseResultMapWallet" parameterType="java.lang.Integer">

        SELECT

        <include refid="Base_Column_ListWallet"/>

        FROM duck_wallet AS w
        INNER JOIN duck_coin AS c ON w.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

        </trim>

        UNION ALL

        SELECT

        <include refid="Base_Column_ListContract"/>

        FROM duck_contract_relation AS r
        INNER JOIN duck_coin AS c ON r.coinId = c.id

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

        </trim>


        <!--SELECT

        <include refid="Base_Column_List"/>

        FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

        </trim>

        ORDER BY create_time-->

    </select>


    <!---->
    <select id="findWalletETHListInfo" parameterType="java.lang.Integer" resultMap="BaseResultWallet">

         SELECT

       id,coinName,address

        FROM duck_wallet

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

        </trim>

    </select>

    <!---->
    <select id="findWalletListInfo" parameterType="java.lang.Integer" resultMap="BaseResultWallet">


        SELECT

        c.id,c.coinName,c.address

        FROM duck_coin AS c
        LEFT JOIN duck_contract_relation AS r  ON c.id = r.coinId

        <trim prefix="WHERE" prefixOverrides="AND | OR">

            <if test="userId != null and userId != 0">
                AND userId = #{userId}
            </if>

        </trim>

    </select>




    <!-- 查询用户是否已拥有ETH -->
    <!-- <select id="findUserWalletCount" resultType="java.lang.Integer">

         SELECT COUNT(*) FROM duck_wallet

         <trim prefix="WHERE" prefixOverrides="AND | OR">

             <if test="userId != null and userId != 0">
                 AND userId = #{userId}
             </if>

             <if test="coinName != null and coinName.length() > 0">
                 AND coinName = #{coinName}
             </if>

         </trim>


     </select>-->




    <!-- 查询参数 -->
    <sql id="Base_Column_List">
        id,
        coinId,
        coinName,
        address,
        contractAddr,
        privateKey,
        passwd,
        keystore,
        create_time,
        userId
    </sql>

    <!-- 查询用户列表ETH信息 -->
    <sql id="Base_Column_ETHWallet">
        w.id,
        w.coinId,
        c.coinName,
        c.coinImg,
        w.address,
        w.contractAddr,
        userId
    </sql>

    <!-- 查询用户列表合约币信息 -->
    <sql id="Base_Column_ContractWallet">
        r.id,
        r.coinId,
        c.coinName,
        c.coinImg,
        r.address,
        r.contractAddr,
        userId
    </sql>




    <!-- 查询ETH参数 -->
    <sql id="Base_Column_ListWallet">
        w.id,
        w.coinId,
        c.coinName,
        w.address,
        w.contractAddr,
        passwd,
        keystore,
        create_time,
        userId
    </sql>

    <!-- 查询合约币参数 -->
    <sql id="Base_Column_ListContract">
        r.id,
        r.coinId,
        c.coinName,
        r.address,
        r.contractAddr,
        passwd,
        keystore,
        create_time,
        userId
    </sql>

    <!-- 查询用户ETH封装参数 -->
    <sql id="Base_Column_ETHInfo">

        id,
        coinName,
        coinImg,
        address,
        userId

    </sql>

    <!-- 查询用户合约币信息封装参数 -->
    <sql id="Base_Column_HeYueInfo">

        c.id,
        c.coinName,
        c.coinImg,
        c.address,
        userId

    </sql>



</mapper>